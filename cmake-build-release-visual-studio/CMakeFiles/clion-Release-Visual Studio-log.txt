"C:\Program Files\JetBrains\CLion 2023.2.2\bin\cmake\win\x64\bin\cmake.exe" -DCMAKE_BUILD_TYPE=Release "-DCMAKE_MAKE_PROGRAM=C:/Program Files/JetBrains/CLion 2023.2.2/bin/ninja/win/x64/ninja.exe" "-DCMAKE_CUDA_COMPILER=C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.6/bin/nvcc.exe" -G Ninja -S "C:\Users\matte\Desktop\Parallel Computing\KIP\ikp" -B "C:\Users\matte\Desktop\Parallel Computing\KIP\ikp\cmake-build-release-visual-studio"
-- The CUDA compiler identification is NVIDIA 12.6.20
-- Detecting CUDA compiler ABI info
-- Detecting CUDA compiler ABI info - done
-- Check for working CUDA compiler: C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.6/bin/nvcc.exe - skipped
-- Detecting CUDA compile features
-- Detecting CUDA compile features - done
-- The CXX compiler identification is MSVC 19.41.34120.0
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.41.34120/bin/Hostx64/x64/cl.exe - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- OpenCV ARCH: x64
-- OpenCV RUNTIME: vc16
-- OpenCV STATIC: OFF
-- Found OpenCV: C:/Users/matte/Desktop/Parallel Computing/opencv/build (found version "4.10.0")
-- Found OpenCV 4.10.0 in C:/Users/matte/Desktop/Parallel Computing/opencv/build/x64/vc16/lib
-- You might need to add C:\Users\matte\Desktop\Parallel Computing\opencv\build\x64\vc16\bin to your PATH to be able to run your applications.
-- Configuring done (41.0s)
-- Generating done (0.0s)
-- Build files have been written to: C:/Users/matte/Desktop/Parallel Computing/KIP/ikp/cmake-build-release-visual-studio
